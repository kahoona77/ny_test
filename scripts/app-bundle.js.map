{"version":3,"sources":["app.ts","environment.ts","home.ts","login.ts","main.ts","resources/index.ts","C:/Data/projects/ny_test/src/app.html","C:/Data/projects/ny_test/src/app.css","C:/Data/projects/ny_test/src/home.html","C:/Data/projects/ny_test/src/login.html"],"names":[],"mappings":";;;;;;;;;;;IAIA,IAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAA;IAG9B;QAKE;YALF,iBAkCC;YAvBC,kBAAa,GAAG;gBACd,GAAG,EAAE,UAAC,qBAA4C,EAAE,IAAU;oBAC5D,EAAE,CAAC,CAAC,qBAAqB,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAtB,CAAsB,CAAC,CAAC,CAAC,CAAC;wBACjF,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;wBAChC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;4BACV,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,yBAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;wBAC5C,CAAC;wBACD,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBAC1B,CAAC;oBACD,MAAM,CAAC,IAAI,EAAE,CAAC;gBAChB,CAAC;aACF,CAAC;YAhBA,KAAK,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;YACjC,KAAK,CAAC,SAAS,GAAG,8CAA8C,CAAA;QAClE,CAAC;QAgBD,6BAAe,GAAf,UAAgB,MAAM,EAAE,MAAM;YAC5B,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC;YACzB,MAAM,CAAC,eAAe,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YACxD,MAAM,CAAC,GAAG,CAAC;gBACT,EAAE,KAAK,EAAE,EAAE,EAAO,KAAK,EAAE,MAAM,EAAK,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,EAAE;gBAC9E,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAI,QAAQ,EAAE,OAAO,EAAG;aACzD,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC;QAlCH;YAAC,0BAAM,CAAC,gCAAU,CAAC;;eAAA;QAmCnB,UAAC;IAAD,CAlCA,AAkCC,IAAA;IAlCY,WAAG,MAkCf,CAAA;;;;;ICzCD;sBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;;;;;;;;;;ICEF,IAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAA;IAC9B,IAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;IAGxB;QAKI,cAAqB,UAAsB;YAAtB,eAAU,GAAV,UAAU,CAAY;YAHpC,cAAS,GAAW,CAAC,CAAC;YACtB,YAAO,GAAc,EAAE,CAAC;YAG3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QACjC,CAAC;QAEA,uBAAQ,GAAR,UAAS,MAAM;YACZ,IAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC;QAED,wBAAS,GAAT;YAAA,iBAUC;YATE,IAAI,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;YAC7D,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;YAC5C,KAAK,CAAC,IAAI,CAAC;gBACP,OAAO,EAAE,UAAC,QAAQ;oBACb,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC;oBACjC,KAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;oBAChC,KAAI,CAAC,SAAS,EAAE,CAAC;gBACtB,CAAC;aACJ,CAAC,CAAC;QACP,CAAC;QAED,+BAAgB,GAAhB,UAAkB,QAAQ;YACtB;gBACI,IAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC7B,EAAE,CAAC,CAAC,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC;oBACnB,GAAG,GAAG,aAAa,CAAC;gBACxB,CAAC;gBACD,IAAI,WAAW,GAAG,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAA,EAAE,IAAI,OAAA,EAAE,CAAC,MAAM,IAAI,GAAG,EAAhB,CAAgB,CAAC,CAAC;gBAC5D,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;oBACf,WAAW,GAAG,EAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC;oBACtC,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACnC,CAAC;gBACD,WAAW,CAAC,KAAK,EAAE,CAAC;;;YAVxB,GAAG,CAAC,CAAgB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,CAAC;gBAAxB,IAAI,OAAO,iBAAA;;aAWf;QACL,CAAC;QAED,wBAAS,GAAT;YACI,EAAE,CAAC,QAAQ,CAAC;gBACR,MAAM,EAAE,QAAQ;gBAChB,IAAI,EAAE;oBACF,IAAI,EAAG,KAAK;oBACZ,OAAO,EAAE,IAAI,CAAC,eAAe,EAAE;iBAClC;aACJ,CAAC,CAAC;QACP,CAAC;QAED,8BAAe,GAAf;YACI,IAAI,IAAI,GAAc,EAAE,CAAC;YACzB,GAAG,CAAC,CAAe,UAAY,EAAZ,KAAA,IAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY,CAAC;gBAA3B,IAAI,MAAM,SAAA;gBACX,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;aAC5C;YACD,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAzDL;YAAC,0BAAM,CAAE,gCAAU,CAAC;;gBAAA;QA2DpB,WAAC;IAAD,CA1DA,AA0DC,IAAA;IA1DY,YAAI,OA0DhB,CAAA;;;;;ICnED;QAAA;QAEA,CAAC;QAAD,YAAC;IAAD,CAFA,AAEC,IAAA;IAFY,aAAK,QAEjB,CAAA;;;;;ICEK,OAAQ,CAAC,MAAM,CAAC;QACpB,eAAe,EAAE,qBAAW,CAAC,KAAK;QAClC,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAde,iBAAS,YAcxB,CAAA;;;;;ICvBD,mBAA0B,MAA8B;IAExD,CAAC;IAFe,iBAAS,YAExB,CAAA;;;ACJD;ACAA;ACAA;ACAA","file":"app-bundle.js","sourcesContent":["import {RouterConfiguration, Router, Redirect, NavigationInstruction, Next} from 'aurelia-router';\r\nimport {HttpClient} from 'aurelia-http-client';\r\nimport {inject} from 'aurelia-framework';\r\nimport 'parse';\r\nconst Parse = require('parse')\r\n\r\n@inject(HttpClient)\r\nexport class App {\r\n\r\n  public router;\r\n  public currentUser;\r\n\r\n  constructor() {\r\n    Parse.initialize(\"newYorkerApi\"); \r\n    Parse.serverURL = 'https://appdev.newyorker.de/newyorkerapitest'\r\n  }\r\n\r\n\r\n  authorizeStep = {\r\n    run: (navigationInstruction: NavigationInstruction, next: Next): Promise<any> => {\r\n      if (navigationInstruction.getAllInstructions().some(i => i.config.settings.auth)) {\r\n        var user = Parse.User.current();\r\n        if (!user) {\r\n          return next.cancel(new Redirect('login'));\r\n        }\r\n        this.currentUser = user;\r\n      }\r\n      return next();\r\n    }\r\n  };\r\n\r\n  configureRouter(config, router){\r\n    config.title = 'NY Test';\r\n    config.addPipelineStep('authorize', this.authorizeStep);\r\n    config.map([\r\n      { route: '',      title: 'Home',    moduleId: 'home', settings: {auth: true} },\r\n      { route: 'login', title: 'Login',   moduleId: 'login'  }\r\n    ]);\r\n\r\n    this.router = router;\r\n  }\r\n}\r\n\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import {inject} from 'aurelia-framework'\r\nimport {HttpClient} from 'aurelia-http-client';\r\nimport 'c3';\r\nimport 'parse';\r\n\r\nconst Parse = require('parse')\r\nconst c3 = require('c3')\r\n\r\n@inject (HttpClient)\r\nexport class Home {\r\n\r\n    public userCount: number = 0;\r\n    public genders:Array<any> = [];\r\n\r\n    constructor (private httpClient: HttpClient) {\r\n        this.httpClient = httpClient;\r\n    }\r\n\r\n     activate(params) {\r\n        this.loadUsers();\r\n    }\r\n\r\n    loadUsers () {\r\n       let CustomerProfile = Parse.Object.extend(\"CustomerProfile\");\r\n       let query = new Parse.Query(CustomerProfile);\r\n        query.find({\r\n            success: (profiles) => {\r\n                 this.userCount = profiles.length;\r\n                 this.createGenderList(profiles);\r\n                 this.drawChart();\r\n            }\r\n        });\r\n    }\r\n\r\n    createGenderList (profiles) {\r\n        for (let profile of profiles) {\r\n            let sex = profile.get('sex');\r\n            if (sex == undefined) {\r\n                sex = 'Not defined';\r\n            }\r\n            let genderCount = this.genders.find(it => it.gender == sex);\r\n            if (!genderCount) {\r\n                genderCount = {gender: sex, count: 0};\r\n                this.genders.push(genderCount);\r\n            }\r\n            genderCount.count++;\r\n        }\r\n    }\r\n\r\n    drawChart () {\r\n        c3.generate({\r\n            bindto: '#chart',\r\n            data: {\r\n                type : 'pie',\r\n                columns: this.createChartData()\r\n            }\r\n        });\r\n    }\r\n\r\n    createChartData () {\r\n        let data:Array<any> = [];\r\n        for (let gender of this.genders) {\r\n            data.push([gender.gender, gender.count]);\r\n        }\r\n        return data;\r\n    }\r\n    \r\n}","export class Login {\r\n\r\n}","import {Aurelia} from 'aurelia-framework'\r\nimport environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\n(<any>Promise).config({\r\n  longStackTraces: environment.debug,\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia: Aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","import {FrameworkConfiguration} from 'aurelia-framework';\r\n\r\nexport function configure(config: FrameworkConfiguration) {\r\n  //config.globalResources([]);\r\n}\r\n",null,null,null,null],"sourceRoot":"../src"}